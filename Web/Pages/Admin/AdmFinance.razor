@page "/admin/finance"
@inject HttpClient Http
@using ClubIS.Web.Components.Finance

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Admin finance</MudText>
    <MudTabs Vertical="true">
        <MudTabPanel Text="Events">
            <MudContainer MaxWidth="MaxWidth.Large">
                @if (events == null)
                {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
                }
                else
                {
                <MudTable Items="@events" Hover="true" Filter="new Func<EventListWithTotalCostsDTO,bool>(FilterFunc)" @bind-SelectedItem="selected_item">
                    <ToolBarContent>
                        <MudTextField @bind-Value="search_string" Immediate="true" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Search" IconSize="Size.Medium"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>Date</MudTh>
                        <MudTh>Name</MudTh>
                        <MudTh>Place</MudTh>
                        <MudTh>Type</MudTh>
                        <MudTh>Deadlines</MudTh>
                        <MudTh>Cost</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Date">@context.Event.StartDate</MudTd>
                        <MudTd DataLabel="Name">@context.Event.Name</MudTd>
                        <MudTd DataLabel="Place">@context.Event.Place</MudTd>
                        <MudTd DataLabel="Type">@context.Event.EventType</MudTd>
                        <MudTd DataLabel="Deadlines">@context.Event.Deadlines</MudTd>
                        <MudTd DataLabel="Cost">@context.TotalCosts</MudTd>
                    </RowTemplate>
                </MudTable>
                <MudText>Selected: @selected_item?.Event.Name</MudText>
                }
            </MudContainer>
        </MudTabPanel>
        <MudTabPanel Text="Users">
            <FinanceUserList />
        </MudTabPanel>
        <MudTabPanel Text="MemberFees">
            <MemberFee />
        </MudTabPanel>
        <MudTabPanel Text="Claims">
            <MudText>Item Five</MudText>
        </MudTabPanel>
    </MudTabs>
</MudContainer>

@code {
    string search_string = "";
    EventListWithTotalCostsDTO selected_item = null;
    private EventListWithTotalCostsDTO[] events;

    protected override async Task OnInitializedAsync()
    {
        events = await Http.GetFromJsonAsync<EventListWithTotalCostsDTO[]>("Events/costs");
    }

    bool FilterFunc(EventListWithTotalCostsDTO element)
    {
        if (string.IsNullOrWhiteSpace(search_string))
            return true;
        if (element.Event.Name.Contains(search_string))
            return true;
        //if ($"{element.Number} {element.Position} {element.Molar}".Contains(search_string))
        //    return true;
        return false;
    }
}

