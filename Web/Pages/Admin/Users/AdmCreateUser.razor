@page "/admin/users/create"

@attribute [Authorize(Policy = Policy.Users)]
@inject NavigationManager NavigationManager
@inject IdentityAuthenticationStateProvider AuthStateProvider

<MudContainer MaxWidth="MaxWidth.ExtraLarge">
    <MudBreadcrumbs Items="_breadCrumbs"></MudBreadcrumbs>
    <MudText Typo="Typo.h3">Create User</MudText>

    <EditForm Model="@_registerParameters" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator/>
        <MudCard Elevation="0">
            <MudCardContent>
                <MudCard Elevation="0">
                    <MudText Typo="Typo.h4" GutterBottom="true">User data</MudText>
                    <MudCardContent>
                        <MudTextField Label="Firstname" @bind-Value="_registerParameters.Firstname" For="@(() => _registerParameters.Firstname)" Variant="Variant.Outlined"/>
                        <MudTextField Label="Surname" @bind-Value="_registerParameters.Surname" For="@(() => _registerParameters.Surname)" Variant="Variant.Outlined"/>
                        <MudTextField Label="Reg. number" @bind-Value="_registerParameters.RegistrationNumber" For="@(() => _registerParameters.RegistrationNumber)" Variant="Variant.Outlined"/>
                    </MudCardContent>
                </MudCard>
                <MudCard Elevation="0">
                    <MudText Typo="Typo.h4" GutterBottom="true">User credentials</MudText>
                    <MudCardContent>
                        <MudTextField Label="Username" @bind-Value="_registerParameters.UserName" For="@(() => _registerParameters.UserName)" Variant="Variant.Outlined"/>
                        <MudTextField Label="Password" InputType="InputType.Password" @bind-Value="_registerParameters.Password" For="@(() => _registerParameters.Password)" Variant="Variant.Outlined"/>
                        <MudTextField Label="Password Confirmation" InputType="InputType.Password" @bind-Value="_registerParameters.PasswordConfirm" For="@(() => _registerParameters.PasswordConfirm)" Variant="Variant.Outlined"/>
                    </MudCardContent>
                </MudCard>
                @if (_errorMessage != null)
                {
                    <MudAlert Severity="Severity.Error">@_errorMessage</MudAlert>
                }
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Text" Color="Color.Default" StartIcon="@Icons.Filled.Close" OnClick="Navigate" Class="ml-3">Cancel</MudButton>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mx-2">Save</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
</MudContainer>

@code {
    private readonly List<BreadcrumbItem> _breadCrumbs = new()
    {
        new BreadcrumbItem("Admin", null, true),
        new BreadcrumbItem("Users", "/admin/users"),
        new BreadcrumbItem("Create", "/admin/users/create"),
    };
    private readonly RegisterParametersDTO _registerParameters = new();
    private string _errorMessage;

    private void Navigate()
    {
        NavigationManager.NavigateTo("/admin/users");
    }

    private async Task OnValidSubmit(EditContext context)
    {
        _errorMessage = null;
        try
        {
            await AuthStateProvider.Register(_registerParameters);
            Navigate();
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
        }
    }

}