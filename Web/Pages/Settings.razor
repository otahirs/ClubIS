@page "/settings"

@attribute [Authorize]

@using ClubIS.Web.Components

@inject HttpClient Http
@inject IdentityAuthenticationStateProvider authStateProvider

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Settings</MudText>
    <MudTabs Elevation="1">
        <MudTabPanel Text="User">
            <MudContainer MaxWidth="MaxWidth.Large" Class="mt-8">
                @if (CurrentUser != null)
                {<UserEditForm User="CurrentUser" />}
                else
                { <MudProgressCircular Color="Color.Default" Indeterminate="true" />}
            </MudContainer>
        </MudTabPanel>
        <MudTabPanel Text="SI Cards">
            <MudContainer MaxWidth="MaxWidth.Large" Class="mt-8">
                @if (CurrentUser != null)
                {<SICardsForm User="CurrentUser" />}
                else
                { <MudProgressCircular Color="Color.Default" Indeterminate="true" />}
            </MudContainer>
        </MudTabPanel>
        <MudTabPanel Text="Login">
            <MudContainer MaxWidth="MaxWidth.Large" Class="mt-8">
                <LoginEditForm EditedUserId="CurrentUser.Id" />
            </MudContainer>
        </MudTabPanel>
        <MudTabPanel Text="Supervision">
            <MudContainer MaxWidth="MaxWidth.Large" Class="mt-8">
                @if (CurrentUser != null)
                { <Supervisors UserId="CurrentUser.Id" isAdmin="false" /> }
                else
                { <MudProgressCircular Color="Color.Default" Indeterminate="true" /> }
            </MudContainer>
        </MudTabPanel>
    </MudTabs>
</MudContainer>

@code {
    private UserDTO CurrentUser;

    protected override async Task OnInitializedAsync()
    {
        var currentUserId = await authStateProvider.GetUserId();
        CurrentUser = await Http.GetFromJsonAsync<UserDTO>($"Users/{currentUserId}");
    }
}