@page "/event/{eventId:int}"
@inject HttpClient Http
@attribute [Authorize]
@inject IdentityAuthenticationStateProvider authState

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    @if (E == null)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {

        <MudExpansionPanel>
            <TitleContent>
                <MudText Typo="Typo.h3" GutterBottom="true">@E.Event.Name</MudText>
            </TitleContent>
            <ChildContent>
                @if (Users == null)
                {
                    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
                }
                else
                {
                    <EditForm Model="@sendEntry" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />
                        <MudCard Elevation="0">
                            <MudCardContent>
                                <MudSelect Label="User" @bind-Value="@sendEntry.UserId" Variant="Variant.Outlined">
                                    <MudSelectItem Value="@Users.User.Id">@Users.User.Name</MudSelectItem>
                                    @foreach (var user in Users.Supervised)
                                            {
                                        <MudSelectItem Value="@user.Id">@user.Name</MudSelectItem>
                                            }
                                </MudSelect>

                                <MudSelect Label="Class" @bind-Value="@sendEntry.Class" Variant="Variant.Outlined">
                                    @foreach (var c in E.Event.ClassOptions)
                                            {
                                        <MudSelectItem Value="@c">@c</MudSelectItem>
                                            }
                                </MudSelect>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Send</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </EditForm>
                }
            </ChildContent>
        </MudExpansionPanel>
    }
</MudContainer>

@code {
    [Parameter]
    public int EventId { get; set; }
    private int UserId = 1;

    private EventEditWithUserEntryDTO E;
    private UserEntryListDTO Users;
    private EventEntryEditPostDTO sendEntry = new EventEntryEditPostDTO();

    protected override async Task OnInitializedAsync()
    {
        UserId = await authState.GetUserId();
        E = await Http.GetFromJsonAsync<EventEditWithUserEntryDTO>($"Events/user/{EventId}/{UserId}");
        Users = await Http.GetFromJsonAsync<UserEntryListDTO>($"Users/entriesSupervisor/{UserId}");
        sendEntry.UserId = UserId;
        Console.WriteLine(Users.User.Name);
    }

    private async Task OnValidSubmit(EditContext context)
    {
        Console.WriteLine("sss");
    }

}
